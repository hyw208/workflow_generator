<?xml version="1.0" ?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:camunda="http://camunda.org/schema/1.0/bpmn" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC" xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI" targetNamespace="http://bpmn.io/schema/bpmn" id="approval_definitions">
  <error id="RejectionError" name="Rejection Error" errorCode="RejectionError"/>
  <process id="approval_process" isExecutable="true" camunda:historyTimeToLive="180">
    <startEvent id="StartEvent"/>
    <serviceTask id="Task1" name="Call API As Test">
      <extensionElements>
        <camunda:connector>
          <camunda:connectorId>http-connector</camunda:connectorId>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">http://host.docker.internal:8081</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="payload">{"name": "approval", "x": 2}</camunda:inputParameter>
          </camunda:inputOutput>
        </camunda:connector>
      </extensionElements>
    </serviceTask>
    <userTask id="Task2" name="Human Approval" camunda:formKey="x/y/z/approval.html">
      <extensionElements>
        <camunda:meta key="RSA">1</camunda:meta>
        <camunda:meta key="ACK">2</camunda:meta>
      </extensionElements>
    </userTask>
    <exclusiveGateway id="Decision1" name="Check For Approval Or Rejection"/>
    <endEvent id="EndApproved"/>
    <endEvent id="EndRejected">
      <errorEventDefinition errorRef="RejectionError"/>
    </endEvent>
    <sequenceFlow id="Flow_StartEvent_to_Task1" sourceRef="StartEvent" targetRef="Task1"/>
    <sequenceFlow id="Flow_Task1_to_Task2" sourceRef="Task1" targetRef="Task2"/>
    <sequenceFlow id="Flow_Task2_to_Decision1" sourceRef="Task2" targetRef="Decision1"/>
    <sequenceFlow id="Flow_Decision1_to_EndApproved" sourceRef="Decision1" targetRef="EndApproved">
      <conditionExpression xsi:type="tFormalExpression">${approved == true}</conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="Flow_Decision1_to_EndRejected" sourceRef="Decision1" targetRef="EndRejected">
      <conditionExpression xsi:type="tFormalExpression">${approved == false}</conditionExpression>
    </sequenceFlow>
  </process>
</definitions>
